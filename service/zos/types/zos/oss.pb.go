// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v4.25.1
// source: oss.proto

package zos

import (
	_ "github.com/telecom-cloud/client-go/pkg/openapi/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetOssServiceStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId string `protobuf:"bytes,1,opt,name=regionId,proto3" json:"regionId,omitempty" query:"regionId"`
}

func (x *GetOssServiceStatusRequest) Reset() {
	*x = GetOssServiceStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOssServiceStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOssServiceStatusRequest) ProtoMessage() {}

func (x *GetOssServiceStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOssServiceStatusRequest.ProtoReflect.Descriptor instead.
func (*GetOssServiceStatusRequest) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{0}
}

func (x *GetOssServiceStatusRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

type GetOssServiceStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,1,opt,name=state,proto3" form:"state" json:"state,omitempty" query:"state"`
}

func (x *GetOssServiceStatusResponse) Reset() {
	*x = GetOssServiceStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOssServiceStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOssServiceStatusResponse) ProtoMessage() {}

func (x *GetOssServiceStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOssServiceStatusResponse.ProtoReflect.Descriptor instead.
func (*GetOssServiceStatusResponse) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{1}
}

func (x *GetOssServiceStatusResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type NewOssServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionID    string `protobuf:"bytes,1,opt,name=regionID,proto3" form:"regionID" json:"regionID,omitempty"`
	ClientToken string `protobuf:"bytes,2,opt,name=clientToken,proto3" form:"clientToken" json:"clientToken,omitempty"`
}

func (x *NewOssServiceRequest) Reset() {
	*x = NewOssServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOssServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOssServiceRequest) ProtoMessage() {}

func (x *NewOssServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOssServiceRequest.ProtoReflect.Descriptor instead.
func (*NewOssServiceRequest) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{2}
}

func (x *NewOssServiceRequest) GetRegionID() string {
	if x != nil {
		return x.RegionID
	}
	return ""
}

func (x *NewOssServiceRequest) GetClientToken() string {
	if x != nil {
		return x.ClientToken
	}
	return ""
}

type NewOssServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterOrderID        string     `protobuf:"bytes,1,opt,name=masterOrderID,proto3" form:"masterOrderID" json:"masterOrderID,omitempty" query:"masterOrderID"`
	MasterOrderNO        string     `protobuf:"bytes,2,opt,name=masterOrderNO,proto3" form:"masterOrderNO" json:"masterOrderNO,omitempty" query:"masterOrderNO"`
	RegionID             string     `protobuf:"bytes,3,opt,name=regionID,proto3" form:"regionID" json:"regionID,omitempty" query:"regionID"`
	MasterResourceID     string     `protobuf:"bytes,4,opt,name=masterResourceID,proto3" form:"masterResourceID" json:"masterResourceID,omitempty" query:"masterResourceID"`
	MasterResourceStatus string     `protobuf:"bytes,5,opt,name=masterResourceStatus,proto3" form:"masterResourceStatus" json:"masterResourceStatus,omitempty" query:"masterResourceStatus"`
	Resources            *Resources `protobuf:"bytes,6,opt,name=resources,proto3" form:"resources" json:"resources,omitempty" query:"resources"`
}

func (x *NewOssServiceResponse) Reset() {
	*x = NewOssServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOssServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOssServiceResponse) ProtoMessage() {}

func (x *NewOssServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOssServiceResponse.ProtoReflect.Descriptor instead.
func (*NewOssServiceResponse) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{3}
}

func (x *NewOssServiceResponse) GetMasterOrderID() string {
	if x != nil {
		return x.MasterOrderID
	}
	return ""
}

func (x *NewOssServiceResponse) GetMasterOrderNO() string {
	if x != nil {
		return x.MasterOrderNO
	}
	return ""
}

func (x *NewOssServiceResponse) GetRegionID() string {
	if x != nil {
		return x.RegionID
	}
	return ""
}

func (x *NewOssServiceResponse) GetMasterResourceID() string {
	if x != nil {
		return x.MasterResourceID
	}
	return ""
}

func (x *NewOssServiceResponse) GetMasterResourceStatus() string {
	if x != nil {
		return x.MasterResourceStatus
	}
	return ""
}

func (x *NewOssServiceResponse) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

type Resources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZosID            string `protobuf:"bytes,1,opt,name=zosID,proto3" form:"zosID" json:"zosID,omitempty" query:"zosID"`
	OrderID          string `protobuf:"bytes,2,opt,name=orderID,proto3" form:"orderID" json:"orderID,omitempty" query:"orderID"`
	StartTime        int64  `protobuf:"varint,3,opt,name=startTime,proto3" form:"startTime" json:"startTime,omitempty" query:"startTime"`
	CreateTime       int64  `protobuf:"varint,4,opt,name=createTime,proto3" form:"createTime" json:"createTime,omitempty" query:"createTime"`
	UpdateTime       int64  `protobuf:"varint,5,opt,name=updateTime,proto3" form:"updateTime" json:"updateTime,omitempty" query:"updateTime"`
	Status           int64  `protobuf:"varint,6,opt,name=status,proto3" form:"status" json:"status,omitempty" query:"status"`
	IsMaster         bool   `protobuf:"varint,7,opt,name=isMaster,proto3" form:"isMaster" json:"isMaster,omitempty" query:"isMaster"`
	ItemValue        int64  `protobuf:"varint,8,opt,name=itemValue,proto3" form:"itemValue" json:"itemValue,omitempty" query:"itemValue"`
	ResourceType     string `protobuf:"bytes,9,opt,name=resourceType,proto3" form:"resourceType" json:"resourceType,omitempty" query:"resourceType"`
	MasterResourceID string `protobuf:"bytes,10,opt,name=masterResourceID,proto3" form:"masterResourceID" json:"masterResourceID,omitempty" query:"masterResourceID"`
	MasterOrderID    string `protobuf:"bytes,11,opt,name=masterOrderID,proto3" form:"masterOrderID" json:"masterOrderID,omitempty" query:"masterOrderID"`
}

func (x *Resources) Reset() {
	*x = Resources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resources) ProtoMessage() {}

func (x *Resources) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resources.ProtoReflect.Descriptor instead.
func (*Resources) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{4}
}

func (x *Resources) GetZosID() string {
	if x != nil {
		return x.ZosID
	}
	return ""
}

func (x *Resources) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *Resources) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Resources) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Resources) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *Resources) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Resources) GetIsMaster() bool {
	if x != nil {
		return x.IsMaster
	}
	return false
}

func (x *Resources) GetItemValue() int64 {
	if x != nil {
		return x.ItemValue
	}
	return 0
}

func (x *Resources) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *Resources) GetMasterResourceID() string {
	if x != nil {
		return x.MasterResourceID
	}
	return ""
}

func (x *Resources) GetMasterOrderID() string {
	if x != nil {
		return x.MasterOrderID
	}
	return ""
}

type CreateBucketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionID        string           `protobuf:"bytes,1,opt,name=regionID,proto3" form:"regionID" json:"regionID,omitempty"`
	ACL             string           `protobuf:"bytes,2,opt,name=ACL,proto3" form:"ACL" json:"ACL,omitempty"`
	Bucket          string           `protobuf:"bytes,3,opt,name=bucket,proto3" form:"bucket" json:"bucket,omitempty"`
	ProjectID       string           `protobuf:"bytes,4,opt,name=projectID,proto3" form:"projectID" json:"projectID,omitempty"`
	CmkUUID         string           `protobuf:"bytes,5,opt,name=cmkUUID,proto3" form:"cmkUUID" json:"cmkUUID,omitempty"`
	IsEncrypted     bool             `protobuf:"varint,6,opt,name=isEncrypted,proto3" form:"isEncrypted" json:"isEncrypted,omitempty"`
	StorageType     string           `protobuf:"bytes,7,opt,name=storageType,proto3" form:"storageType" json:"storageType,omitempty"`
	AZPolicy        string           `protobuf:"bytes,8,opt,name=AZPolicy,proto3" form:"AZPolicy" json:"AZPolicy,omitempty"`
	Labels          []*Label         `protobuf:"bytes,9,rep,name=labels,proto3" form:"labels" json:"labels,omitempty"`
	OtherBucketInfo *OtherBucketInfo `protobuf:"bytes,10,opt,name=otherBucketInfo,proto3" form:"otherBucketInfo" json:"otherBucketInfo,omitempty"`
}

func (x *CreateBucketRequest) Reset() {
	*x = CreateBucketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBucketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBucketRequest) ProtoMessage() {}

func (x *CreateBucketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBucketRequest.ProtoReflect.Descriptor instead.
func (*CreateBucketRequest) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{5}
}

func (x *CreateBucketRequest) GetRegionID() string {
	if x != nil {
		return x.RegionID
	}
	return ""
}

func (x *CreateBucketRequest) GetACL() string {
	if x != nil {
		return x.ACL
	}
	return ""
}

func (x *CreateBucketRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *CreateBucketRequest) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *CreateBucketRequest) GetCmkUUID() string {
	if x != nil {
		return x.CmkUUID
	}
	return ""
}

func (x *CreateBucketRequest) GetIsEncrypted() bool {
	if x != nil {
		return x.IsEncrypted
	}
	return false
}

func (x *CreateBucketRequest) GetStorageType() string {
	if x != nil {
		return x.StorageType
	}
	return ""
}

func (x *CreateBucketRequest) GetAZPolicy() string {
	if x != nil {
		return x.AZPolicy
	}
	return ""
}

func (x *CreateBucketRequest) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateBucketRequest) GetOtherBucketInfo() *OtherBucketInfo {
	if x != nil {
		return x.OtherBucketInfo
	}
	return nil
}

type Label struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" form:"key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" form:"value" json:"value,omitempty"`
}

func (x *Label) Reset() {
	*x = Label{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Label) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Label) ProtoMessage() {}

func (x *Label) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Label.ProtoReflect.Descriptor instead.
func (*Label) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{6}
}

func (x *Label) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Label) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type OtherBucketInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectLockEnabledForBucket bool `protobuf:"varint,1,opt,name=ObjectLockEnabledForBucket,proto3" form:"ObjectLockEnabledForBucket" json:"ObjectLockEnabledForBucket,omitempty"`
}

func (x *OtherBucketInfo) Reset() {
	*x = OtherBucketInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OtherBucketInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OtherBucketInfo) ProtoMessage() {}

func (x *OtherBucketInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OtherBucketInfo.ProtoReflect.Descriptor instead.
func (*OtherBucketInfo) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{7}
}

func (x *OtherBucketInfo) GetObjectLockEnabledForBucket() bool {
	if x != nil {
		return x.ObjectLockEnabledForBucket
	}
	return false
}

type CreateBucketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" form:"data" json:"data,omitempty" query:"data"`
}

func (x *CreateBucketResponse) Reset() {
	*x = CreateBucketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oss_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBucketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBucketResponse) ProtoMessage() {}

func (x *CreateBucketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oss_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBucketResponse.ProtoReflect.Descriptor instead.
func (*CreateBucketResponse) Descriptor() ([]byte, []int) {
	return file_oss_proto_rawDescGZIP(), []int{8}
}

func (x *CreateBucketResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_oss_proto protoreflect.FileDescriptor

var file_oss_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6f, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x46, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xb2,
	0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x73, 0x0a, 0x14, 0x4e, 0x65,
	0x77, 0x4f, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x31, 0x0a, 0x0b,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x8f, 0x02, 0x0a, 0x15, 0x4e, 0x65, 0x77, 0x4f, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x4f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4e, 0x4f, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x12, 0x32, 0x0a,
	0x14, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x2e, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x22, 0xe1, 0x02, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x7a, 0x6f, 0x73, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x7a, 0x6f, 0x73, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x12,
	0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x22, 0xeb, 0x03, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0c, 0xca, 0xbb, 0x18, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x19, 0x0a, 0x03, 0x41, 0x43, 0x4c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x41, 0x43, 0x4c, 0x52, 0x03, 0x41,
	0x43, 0x4c, 0x12, 0x22, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x07, 0x63, 0x6d, 0x6b, 0x55, 0x55, 0x49, 0x44, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x63, 0x6d, 0x6b, 0x55, 0x55, 0x49,
	0x44, 0x52, 0x07, 0x63, 0x6d, 0x6b, 0x55, 0x55, 0x49, 0x44, 0x12, 0x31, 0x0a, 0x0b, 0x69, 0x73,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x42,
	0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x69, 0x73, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64,
	0x52, 0x0b, 0x69, 0x73, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x12, 0x31, 0x0a,
	0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x28, 0x0a, 0x08, 0x41, 0x5a, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x41, 0x5a, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x08, 0x41, 0x5a, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x30, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x55, 0x0a, 0x0f,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x13, 0xca,
	0xbb, 0x18, 0x0f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x43, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x6b,
	0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xbb, 0x18, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x71, 0x0a, 0x0f, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x5e, 0x0a, 0x1a, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x46, 0x6f, 0x72, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x42,
	0x1e, 0xca, 0xbb, 0x18, 0x1a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x1a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x46, 0x6f, 0x72, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x2a, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xf7, 0x02, 0x0a, 0x0a, 0x5a, 0x6f, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f, 0x73,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0xca, 0xc1, 0x18, 0x1e, 0x2f, 0x76, 0x34, 0x2f, 0x6f,
	0x73, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x2d, 0x6f, 0x73, 0x73, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x5b, 0x0a, 0x0d, 0x4e, 0x65, 0x77,
	0x4f, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x77, 0x4f, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4e, 0x65, 0x77, 0x4f, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0f, 0xd2, 0xc1, 0x18, 0x0b, 0x2f, 0x76, 0x34, 0x2f, 0x6f,
	0x73, 0x73, 0x2f, 0x6e, 0x65, 0x77, 0x12, 0x62, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x19, 0xd2, 0xc1, 0x18, 0x15, 0x2f, 0x76, 0x34, 0x2f, 0x6f, 0x73, 0x73, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x2d, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x1a, 0x25, 0x92, 0xce, 0x18, 0x21,
	0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x7a, 0x6f, 0x73, 0x2d, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x2e, 0x63, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x74, 0x79, 0x75, 0x6e, 0x2e, 0x63,
	0x6e, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x74, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x74, 0x65,
	0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67,
	0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x7a, 0x6f, 0x73, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2f, 0x7a, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_oss_proto_rawDescOnce sync.Once
	file_oss_proto_rawDescData = file_oss_proto_rawDesc
)

func file_oss_proto_rawDescGZIP() []byte {
	file_oss_proto_rawDescOnce.Do(func() {
		file_oss_proto_rawDescData = protoimpl.X.CompressGZIP(file_oss_proto_rawDescData)
	})
	return file_oss_proto_rawDescData
}

var file_oss_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_oss_proto_goTypes = []interface{}{
	(*GetOssServiceStatusRequest)(nil),  // 0: proto.GetOssServiceStatusRequest
	(*GetOssServiceStatusResponse)(nil), // 1: proto.GetOssServiceStatusResponse
	(*NewOssServiceRequest)(nil),        // 2: proto.NewOssServiceRequest
	(*NewOssServiceResponse)(nil),       // 3: proto.NewOssServiceResponse
	(*Resources)(nil),                   // 4: proto.resources
	(*CreateBucketRequest)(nil),         // 5: proto.CreateBucketRequest
	(*Label)(nil),                       // 6: proto.label
	(*OtherBucketInfo)(nil),             // 7: proto.otherBucketInfo
	(*CreateBucketResponse)(nil),        // 8: proto.CreateBucketResponse
}
var file_oss_proto_depIdxs = []int32{
	4, // 0: proto.NewOssServiceResponse.resources:type_name -> proto.resources
	6, // 1: proto.CreateBucketRequest.labels:type_name -> proto.label
	7, // 2: proto.CreateBucketRequest.otherBucketInfo:type_name -> proto.otherBucketInfo
	0, // 3: proto.ZosService.GetOssServiceStatus:input_type -> proto.GetOssServiceStatusRequest
	2, // 4: proto.ZosService.NewOssService:input_type -> proto.NewOssServiceRequest
	5, // 5: proto.ZosService.CreateBucket:input_type -> proto.CreateBucketRequest
	1, // 6: proto.ZosService.GetOssServiceStatus:output_type -> proto.GetOssServiceStatusResponse
	3, // 7: proto.ZosService.NewOssService:output_type -> proto.NewOssServiceResponse
	8, // 8: proto.ZosService.CreateBucket:output_type -> proto.CreateBucketResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_oss_proto_init() }
func file_oss_proto_init() {
	if File_oss_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_oss_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOssServiceStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOssServiceStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOssServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOssServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBucketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Label); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OtherBucketInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oss_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBucketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_oss_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_oss_proto_goTypes,
		DependencyIndexes: file_oss_proto_depIdxs,
		MessageInfos:      file_oss_proto_msgTypes,
	}.Build()
	File_oss_proto = out.File
	file_oss_proto_rawDesc = nil
	file_oss_proto_goTypes = nil
	file_oss_proto_depIdxs = nil
}
